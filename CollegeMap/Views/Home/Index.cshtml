@model CollegeMap.Models.CollegeMapViewModels.QueryCollegeViewModel

@{
    ViewData["Title"] = "Home Page";
}

<h3>College Selection Criteria</h3>

<form asp-action="Query">
    <div class="row">
        <div class="col-md-6">
            <div class="row form-group">
                <!--  rows for first column -->
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <label asp-for="HomeAddress" class="col-md-4 control-label"></label>
                    <div class="col-md-8">
                        <input asp-for="HomeAddress" class="form-control" autofocus />
                        <span asp-validation-for="HomeAddress" class="text-danger"></span>
                    </div>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <label asp-for="MaxTravel" class="col-md-4 control-label"></label>
                    <div class="col-md-8">
                        <input asp-for="MaxTravel" class="form-control" />
                        <span asp-validation-for="MaxTravel" class="text-danger"></span>
                    </div>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <label asp-for="NameContains" class="col-md-4 control-label"></label>
                    <div class="col-md-8">
                        <input asp-for="NameContains" class="form-control" />
                        <span asp-validation-for="NameContains" class="text-danger"></span>
                    </div>
                    <label asp-for="MaxTotalCost" class="col-md-4 control-label"></label>
                    <div class="col-md-8">
                        <input asp-for="MaxTotalCost" class="form-control" />
                        <span asp-validation-for="MaxTotalCost" class="text-danger"></span>
                    </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row form-group">
                <!-- Rows for the second column -->
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <label asp-for="MaximumEnrollment" class="col-md-4 control-label"></label>
                    <div class="col-md-8">
                        <input asp-for="MaximumEnrollment" class="form-control" />
                        <span asp-validation-for="MaximumEnrollment" class="text-danger"></span>
                    </div>
                    <label asp-for="MinimumEnrollment" class="col-md-4 control-label"></label>
                    <div class="col-md-8">
                        <input asp-for="MinimumEnrollment" class="form-control" />
                        <span asp-validation-for="MinimumEnrollment" class="text-danger"></span>
                    </div>
                    <label asp-for="CollegeTypeIDs" class="col-md-4 control-label"></label>
                    <div class="col-md-8">
                        <select asp-for="CollegeTypeIDs" asp-items="Model.CollegeTypes"></select>
                    </div>
                    <label asp-for="DegreeTypeID" class="col-md-4 control-label"></label>
                    <div class="col-md-8">
                        <select asp-for="DegreeTypeID" asp-items="Model.DegreeTypes"></select>
                    </div>
            </div>
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Query" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@if (Model.Colleges != null)
{
    <h3>Selected Colleges</h3>

    <table class="table">
        <thead>
            <tr>
                <th>
                    Map #
                </th>
                <th>
                    Name
                </th>
                <th>
                    Notes
                </th>
                <th>
                    Highest Degree Offered
                </th>
                <th>
                    Type
                </th>
                <th>
                    Enrollment
                </th>
                <th>
                    Annual Tuition
                </th>
                <th>
                    Annual R&B
                </th>
                <th>
                    Address
                </th>
                <th>
                    Distance
                </th>
            </tr>
        </thead>
        <tbody>
            @{ var mapIndex = 1; }
            @foreach (var item in Model.Colleges)
            {
                <tr>
                    <td>
                        @mapIndex
                        @{ mapIndex++; }
                   </td>
                    <td>
                        <a href="@Html.DisplayFor(modelItem => item.Website)">@Html.DisplayFor(modelItem => item.Name)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HighestDegreeOffered.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Enrollment)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AnnualTuition)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AnnualRoomAndBoard)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Distance)
                    </td>
                </tr>
            }
        </tbody>
    </table>

<div id="map"></div>

<script>
    var newMarker;
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -34.397, lng: 150.644 }
        });
        var geocoder = new google.maps.Geocoder();
        var markers = [];
        var addresses = [];
        addresses.push("@Model.HomeAddress");

        var titles = [];
        titles.push("Home");
        @foreach (var item in Model.Colleges)
        {
            <text>
           addresses.push("@item.Address");
           titles.push("@item.Name");
            </text>
        }

        mark_pins(addresses, titles, map);
    }

    function mark_pins(addresses, titles, map) {
        var geocoder = new google.maps.Geocoder();
        var markersArray = [];
        var bounds = new google.maps.LatLngBounds();

        var titleIndex = 0;
        for (i = 0; i < addresses.length; i++) {
            // iterate each  address
            geocoder.geocode({
                'address': addresses[i]
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    var currentTitle = titles[titleIndex];
                    if (titleIndex == 0) {
                        currentLabel = "H"
                    }
                    else {
                        var currentLabel = (titleIndex).toString();
                    }
                    titleIndex++;
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        title: currentTitle,
                        label: currentLabel
                    });
                    marker.setMap(map);
                    bounds.extend(results[0].geometry.location);
                    map.fitBounds(bounds);
                    if (map.getZoom() > 10) {  // don't zoom more than city level
                        map.setZoom(10);

                    }
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
    }
</script>
<script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDZlFiNuQsfssb97q19gLwKWvpdb4ptC-U&callback=initMap">
</script>

}

