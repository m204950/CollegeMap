@model CollegeMap.Models.CollegeMapViewModels.QueryCollegeViewModel

@using X.PagedList.Mvc.Core;
@using X.PagedList;

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Home Page";
}

<h4><strong>Data Source:</strong> @Model.CollegeDataProvider, <strong>Version:</strong> @Model.CollegeDataVersion</h4>
<h3>College Selection Criteria</h3>

<form asp-action="Query">
    <div class="row">
        <div class="col-md-6">
            <div class="row form-group">
                <!--  rows for first column -->
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <label asp-for="HomeAddress" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <input asp-for="HomeAddress" class="form-control" autofocus />
                    <span asp-validation-for="HomeAddress" class="text-danger"></span>
                </div>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <label asp-for="MaxTravel" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <input asp-for="MaxTravel" class="form-control" />
                    <span asp-validation-for="MaxTravel" class="text-danger"></span>
                </div>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <label asp-for="NameContains" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <input asp-for="NameContains" class="form-control" />
                    <span asp-validation-for="NameContains" class="text-danger"></span>
                </div>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <label asp-for="AddressContains" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <input asp-for="AddressContains" class="form-control" />
                    <span asp-validation-for="AddressContains" class="text-danger"></span>
                </div>
                <label asp-for="MaxTotalCost" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <input asp-for="MaxTotalCost" class="form-control" />
                    <span asp-validation-for="MaxTotalCost" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row form-group">
                <!-- Rows for the second column -->
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <label asp-for="MaximumEnrollment" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <input asp-for="MaximumEnrollment" class="form-control" />
                    <span asp-validation-for="MaximumEnrollment" class="text-danger"></span>
                </div>
                <label asp-for="MinimumEnrollment" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <input asp-for="MinimumEnrollment" class="form-control" />
                    <span asp-validation-for="MinimumEnrollment" class="text-danger"></span>
                </div>
                <label asp-for="CollegeTypeIDs" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <select asp-for="CollegeTypeIDs" asp-items="Model.CollegeTypes"></select>
                </div>
                <label asp-for="StateIDs" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <select asp-for="StateIDs" asp-items="Model.States"></select>
                </div>
                <label asp-for="DegreeTypeID" class="col-md-4 control-label"></label>
                <div class="col-md-8">
                    <select asp-for="DegreeTypeID" asp-items="Model.DegreeTypes"></select>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Query" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@if (Model.Colleges != null)
{
    @if (Model.OnePageOfColleges.Count < 1)
    {
        <h3>No Colleges Found for Selection Criteria</h3>

    }
    else
    {
    <h3>Selected Colleges</h3>
    <div class="row">
        <div class="col-md-6">

            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Map #
                        </th>
                        <th>
                            Name
                        </th>
                        <th>
                            Details
                        </th>
                        <th>
                            College Scorecard **
                        </th>
                        <th>
                            Distance *
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{ var mapIndex = 1; }
                    @foreach (var item in Model.OnePageOfColleges)
                    {
                        <tr>
                            <td>
                                @mapIndex
                                @{ mapIndex++; }
                            </td>
                            <td>
                                <a href="@Html.DisplayFor(modelItem => item.Website)">@Html.DisplayFor(modelItem => item.Name)</a>
                            </td>
                            <td>
                                <a asp-controller="Colleges" asp-action="Details" asp-route-id="@item.ID">Link</a>
                            </td>
                            <td>
                                <a href="https://collegescorecard.ed.gov/school/?@item.CollegeScorecardID">Link</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Distance)
                            </td>
                        </tr>
                                    }
                </tbody>
            </table>
            <p>@Model.DistanceMessage</p>
            <p>** College Scorecard Info Not Always Available</p>
            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
            @Html.PagedListPager((IPagedList)Model.OnePageOfColleges, page => Url.Action("Index", new
               {
                   page
               }))
        </div>
        <div class="col-md-6">
                <div id="map"></div>
        </div>
    </div>


    <script>
    var newMarker;
    function initMap() {
        var bounds = new google.maps.LatLngBounds();
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: { lat: @Model.HomeLatitude, lng: @Model.HomeLongitude }
        });

        var marker = new google.maps.Marker({
            position: { lat: @Model.HomeLatitude, lng: @Model.HomeLongitude },
            map: map,
            label: "H",
            title: 'Home'
        });
        bounds.extend({ lat: @Model.HomeLatitude, lng: @Model.HomeLongitude });

        var labelIndex = 1;

        @foreach (var item in Model.OnePageOfColleges)
        {
            <text>
            var marker = new google.maps.Marker({
                position: { lat: @item.Latitude, lng: @item.Longitude },
                map: map,
                label: (labelIndex).toString(),
                title: "@item.Name"
            });
            labelIndex++;
            bounds.extend({ lat: @item.Latitude, lng: @item.Longitude });
            </text>
        }
        map.fitBounds(bounds);
    }

    </script>
            <script async defer
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDZlFiNuQsfssb97q19gLwKWvpdb4ptC-U&callback=initMap">
            </script>
        }
    
}
